from aiogram import Router, F
from aiogram.types import CallbackQuery, LabeledPrice, PreCheckoutQuery, Message

from shop.crypto.keyboard_crypto.inline_crypto import *

router_spread = Router()

@router_spread.callback_query(F.data == 'crypto_start')
async def cmd_crypto_start(callback: CallbackQuery):
	await callback.message.delete()
	await callback.message.answer('–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?', reply_markup=menu_board)

@router_spread.callback_query(F.data == 'crypto')
async def cmd_crypto(callback: CallbackQuery):
	await callback.message.edit_text('–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?', reply_markup=menu_board)

@router_spread.callback_query(F.data == 'spread')
async def cmd_spread(callback: CallbackQuery):
	await callback.message.edit_text("–ë–æ—Ç, —è–∫–∏–π –ø–æ—Å—Ç—ñ–π–Ω–æ –∞–Ω–∞–ª—ñ–∑—É—î —Ü—ñ–Ω–∏ –º–æ–Ω–µ—Ç –Ω–∞ DEX –±—ñ—Ä–∂–∞—Ö —ñ, —è–∫—â–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å '—Å–ø—Ä–µ–¥', "
	                                 "–Ω–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ü—é –ø–∞—Ä—É –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –∞—Ä–±—ñ—Ç—Ä–∞–∂—É üìà\n\n2Ô∏è‚É£9Ô∏è‚É£üí≤ / –º—ñ—Å.\n\n",
	                                 reply_markup=board_spread)

@router_spread.callback_query(F.data == 'payment_spread')
async def cmd_payment_spread(callback: CallbackQuery):
	await callback.message.delete()
	await callback.message.answer('–í–∏–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± —Å–ø–ª–∞—Ç–∏ üëá', reply_markup=board_payment_spread)

@router_spread.callback_query(F.data == 'stars_spread')
async def cmd_start_spread(callback: CallbackQuery):
	await callback.message.delete()
	await callback.message.answer_invoice(title='–ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–ø—Ä–µ–¥ –±–æ—Ç–∞',
	                                      description='–°–ø–ª–∞—Ç–∞ –∑–∞ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ –º—ñ—Å—è—Ü—å, –≤ —Ä–æ–∑–º—ñ—Ä—ñ 1250 ‚≠êÔ∏è',
	                                      payload='stars_spread_accept',
	                                      provider_token='',
	                                      currency='XTR',
	                                      prices=[LabeledPrice(label='XTR', amount=1250)],
	                                      reply_markup=board_spread_stars)

@router_spread.pre_checkout_query()
async def cmd_spread_pre_checkout(pre_checkout_query: PreCheckoutQuery):
	await pre_checkout_query.answer(ok=True)

@router_spread.message(F.successful_payment)
async def cmd_succesfful(message: Message):
	playload = message.successful_payment.invoice_payload
	if playload == 'stars_spread_accept':
		await message.answer(text='–î—è–∫—É—î–º–æ –∑–∞ –∫—É–ø—ñ–≤–ª—é –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ spread bot \n–î–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ @ShadowCryps')
	elif playload == 'stars_fire_news_accept':
		await message.answer(text='–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É fire news bot \n–î–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ @ShadowCryps')

@router_spread.callback_query(F.data == 'fire_news')
async def cmd_fire_news(callback: CallbackQuery):
	await callback.message.edit_text("–ê–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∏–π –±–æ—Ç –Ω–æ–≤–∏–Ω –¥–ª—è X –≤–∏–¥–∞—Ç–Ω–∏—Ö –ª—é–¥–µ–π (–Ü–ª–æ–Ω –ú–∞—Å–∫, –¢—Ä–∞–º–ø —Ç–æ—â–æ), —è–∫–∏–π "
	                                 "–≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É—î –∑–≥–∞–¥–∫–∏ –∫—Ä–∏–ø—Ç–æ–º–æ–Ω–µ—Ç –∞–±–æ —ñ–Ω—à–∏—Ö —Å–ª—ñ–≤, –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –∑ –∫—Ä—ñ–ø—Ç–æ—é ü§ñ, –∞ "
	                                 "—Ç–∞–∫–æ–∂ —Å—Ç–µ–∂–∏—Ç—å –∑–∞ –≤–µ–ª–∏–∫–∏–º–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è–º–∏ –º—ñ–∂ –≥–∞–º–∞–Ω—Ü—è–º–∏. üëÄ –¶–µ –¥–æ–ø–æ–º–æ–∂–µ —à–≤–∏–¥–∫–æ "
	                                 "–≤—ñ–¥—Ä–µ–∞–≥—É–≤–∞—Ç–∏ –Ω–∞ –ø–æ–¥—ñ—ó\n\n1Ô∏è‚É£9Ô∏è‚É£üí≤ / –º—ñ—Å.", reply_markup=board_fire_news)

@router_spread.callback_query(F.data == 'payment_fire_news')
async def cmd_payment_news(callback: CallbackQuery):
	await callback.message.delete()
	await callback.message.answer('–í–∏–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± —Å–ø–ª–∞—Ç–∏ üëá', reply_markup=board_payment_fire_news)

@router_spread.callback_query(F.data == 'stars_fire_news')
async def cmd_start_news(callback: CallbackQuery):
	await callback.message.delete()
	await callback.message.answer_invoice(title='–ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–ø—Ä–µ–¥ –±–æ—Ç–∞',
	                                      description='–°–ø–ª–∞—Ç–∞ –∑–∞ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ –º—ñ—Å—è—Ü—å, –≤ —Ä–æ–∑–º—ñ—Ä—ñ 820 ‚≠êÔ∏è',
	                                      payload='stars_fire_news_accept',
	                                      provider_token='',
	                                      currency='XTR',
	                                      prices=[LabeledPrice(label='XTR', amount=820)],
	                                      reply_markup=board_fire_news_stars)